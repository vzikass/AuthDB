name: Go

on:
  pull_request:
    branches:
      - "main"
      - "tomerge"

jobs:
  
  # Step 1: Build job
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] 
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v ./...

  # Step 2: Migration test job
  migration-test:
    runs-on: ubuntu-latest
    needs: build
    services:
      maindb:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 193566
          POSTGRES_DB: AuthDB
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      testdb:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 193566
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Wait for Postgres (testdb)...
        run: |
          until pg_isready -h localhost -p 5433 -U postgres; do
            sleep 2
          done
          sleep 3

      - name: Run migration tests
        run: go test -v ./tests/migration-test

  # Step 3: Integration test job (depends on migration-test)
  integration-test:
    runs-on: ubuntu-latest
    needs: migration-test  
    services:
      testdb:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 193566
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Wait for Postgres (testdb)...
        run: |
          until pg_isready -h localhost -p 5433 -U postgres; do
            sleep 2
          done
          sleep 3

      - name: Run integration tests
        run: go test -v ./tests/integration-test

  # Step 4: Docker build job (optional)
  docker:
    runs-on: ubuntu-latest
    needs: [build, integration-test]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: vzikass/authdb:latest